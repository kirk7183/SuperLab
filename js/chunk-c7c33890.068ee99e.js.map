{"version":3,"sources":["webpack:///./src/views/NajcescaPitanja.vue?ff8f","webpack:///src/views/NajcescaPitanja.vue","webpack:///./src/views/NajcescaPitanja.vue?f772","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/views/NajcescaPitanja.vue"],"names":["_vm","this","_h","$createElement","_c","_self","staticClass","attrs","accordion","popout","inset","multiple","disabled","readonly","flat","tile","_l","item","i","key","_v","_s","pitanje","odgovor","staticRenderFns","data","mixins","name","props","Boolean","content","header","nextIsActive","computed","classes","groupClasses","isDisabled","expansionPanels","isReadonly","methods","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","onClick","e","toggle","isBooted","render","h","class","String","baseMixins","isActive","expansionPanel","created","beforeDestroy","showLazyContent","directives","value","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","genIcon","icon","VIcon","setBackgroundColor","tabindex","on","click","mousedown","mouseup","open","provide","hover","focusable","$attrs","hasOwnProperty","Array","length","updateItem","getValue","nextValue","index","toggleMethod","component","VCard","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VRow"],"mappings":"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","file":"js/chunk-c7c33890.068ee99e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-card',{staticClass:\"mt-8 mx-auto\",attrs:{\"max-width\":\"800px\",\"center\":\"\"}},[_c('v-row',{attrs:{\"align\":\"center\"}},[_c('v-expansion-panels',{attrs:{\"max-width\":\"\",\"accordion\":_vm.accordion,\"popout\":_vm.popout,\"inset\":_vm.inset,\"multiple\":_vm.multiple,\"focusable\":true,\"disabled\":_vm.disabled,\"readonly\":_vm.readonly,\"flat\":_vm.flat,\"hover\":false,\"tile\":_vm.tile}},_vm._l((_vm.items),function(item,i){return _c('v-expansion-panel',{key:i},[_c('v-expansion-panel-header',[_vm._v(_vm._s(item.pitanje))]),_c('v-expansion-panel-content',[_vm._v(_vm._s(item.odgovor))])],1)}),1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-card max-width=\"800px\" center class=\"mt-8 mx-auto\">\r\n      <v-row align=\"center\">\r\n        <!-- <v-row justify=\"space-around\">\r\n        <v-switch v-model=\"accordion\" class=\"ma-2\" label=\"Accordion\"></v-switch>\r\n        <v-switch v-model=\"popout\" class=\"ma-2\" label=\"Popout\"></v-switch>\r\n        <v-switch v-model=\"inset\" class=\"ma-2\" label=\"Inset\"></v-switch>\r\n        <v-switch v-model=\"multiple\" class=\"ma-2\" label=\"Multiple\"></v-switch>\r\n        <v-switch v-model=\"disabled\" class=\"ma-2\" label=\"Disabled\"></v-switch>\r\n        <v-switch v-model=\"readonly\" class=\"ma-2\" label=\"Readonly\"></v-switch>\r\n        <v-switch v-model=\"focusable\" class=\"ma-2\" label=\"Focusable\"></v-switch>\r\n        <v-switch v-model=\"flat\" class=\"ma-2\" label=\"Flat\"></v-switch>\r\n        <v-switch v-model=\"hover\" class=\"ma-2\" label=\"Hover\"></v-switch>\r\n        <v-switch v-model=\"tile\" class=\"ma-2\" label=\"Tile\"></v-switch>\r\n        </v-row>-->\r\n\r\n        <v-expansion-panels\r\n          max-width\r\n          :accordion=\"accordion\"\r\n          :popout=\"popout\"\r\n          :inset=\"inset\"\r\n          :multiple=\"multiple\"\r\n          :focusable=\"true\"\r\n          :disabled=\"disabled\"\r\n          :readonly=\"readonly\"\r\n          :flat=\"flat\"\r\n          :hover=\"false\"\r\n          :tile=\"tile\"\r\n        >\r\n          <v-expansion-panel v-for=\"(item,i) in items\" :key=\"i\">\r\n            <v-expansion-panel-header>{{item.pitanje}}</v-expansion-panel-header>\r\n            <v-expansion-panel-content>{{item.odgovor}}</v-expansion-panel-content>\r\n          </v-expansion-panel>\r\n        </v-expansion-panels>\r\n      </v-row>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    accordion: false,\r\n    popout: false,\r\n    inset: false,\r\n    multiple: false,\r\n    disabled: false,\r\n    readonly: false,\r\n    focusable: false,\r\n    flat: false,\r\n    hover: true,\r\n    tile: false,\r\n    items: [\r\n      {\r\n        pitanje: \"Sta je potrebno da uradim pre samih analiza?\",\r\n        odgovor:\r\n          \"Potrebno je to to to neki tekst.dsadasdasdasdasdasdasdsadassada\"\r\n      },\r\n      {\r\n        pitanje: \"Da li smem da jedem?\",\r\n        odgovor: \"Neki tekst.dsadasdasdasdasdasdasdsadassada\"\r\n      },\r\n      {\r\n        pitanje: \"Koliko se dugo cekaju analize?\",\r\n        odgovor: \"Neki tekst.dsadasdasdasdasdasdasdsadassada\"\r\n      },\r\n      {\r\n        pitanje: \"Kako se to radi kod Vas?\",\r\n        odgovor: \"Neki tekst.dsadasdasdasdasdasdasdsadassada\"\r\n      },\r\n      {\r\n        pitanje: \"Nisam radio to i to, da li mogu sada?\",\r\n        odgovor: \"Neki tekst.dsadasdasdasdasdasdasdsadassada\"\r\n      },\r\n      {\r\n        pitanje: \"Kako sta gde?\",\r\n        odgovor: \"Neki tekst.dsadasdasdasdasdasdasdsadassada\"\r\n      },\r\n      {\r\n        pitanje: \"I tako to....\",\r\n        odgovor: \"Neki tekst.dsadasdasdasdasdasdasdsadassada\"\r\n      }\r\n    ]\r\n  })\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NajcescaPitanja.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NajcescaPitanja.vue?vue&type=script&lang=js&\"","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./NajcescaPitanja.vue?vue&type=template&id=0060481c&\"\nimport script from \"./NajcescaPitanja.vue?vue&type=script&lang=js&\"\nexport * from \"./NajcescaPitanja.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCard,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VRow})\n"],"sourceRoot":""}